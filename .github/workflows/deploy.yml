name: Deploy Next.js site to Pages

on:
  # main 브랜치에 push될 때 실행
  push:
    branches: ["main"]

  # Actions 탭에서 수동으로 실행할 수 있도록 설정
  workflow_dispatch:

# GitHub Pages에 배포하기 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시에 하나의 배포만 실행되도록 설정
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 빌드 job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # GitHub Pages에서 사용할 정적 사이트 생성기를 지정
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # 캐시 키를 생성하여 의존성이나 소스 코드가 변경될 때만 캐시를 무효화
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # 정확히 일치하는 캐시가 없을 경우 사용할 복원 키
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  # 배포 job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2